generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  username   String    @unique
  email      String    @unique
  created_at DateTime  @default(now())
  password   String
  avatar     String?
  course_id  Int?
  course     Course?   @relation(fields: [course_id], references: [id])
  Comment    Comment[]
  Post       Post[]

  @@map("users")
}

model Course {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  status     Boolean  @default(true)
  users      User[]

  @@map("courses")
}

enum PostType {
  PUBLIC
  COURSE
}

model Post {
  id            String    @id @default(uuid())
  content       String
  created_at    DateTime  @default(now())
  type          PostType? @default(PUBLIC)
  author_id     String
  author        User?     @relation(fields: [author_id], references: [id])
  comments      Comment[]
  likes         Likes[]
  its_published Boolean   @default(true)

  @@map("posts")
}

model Comment {
  id         String   @id @default(uuid())
  content    String
  post_id    String
  author_id  String
  author     User?    @relation(fields: [author_id], references: [id])
  Post       Post?    @relation(fields: [post_id], references: [id])
  likes      Likes[]
  created_at DateTime @default(now())

  @@map("comments")
}

model Likes {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())
  user_id    String
  post       Post?    @relation(fields: [post_id], references: [id])
  post_id    String?
  comments   Comment? @relation(fields: [comment_id], references: [id])
  comment_id String?

  @@map("likes")
}
